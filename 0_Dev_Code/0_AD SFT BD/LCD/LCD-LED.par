
#^
	#@ 240914 
	#^ LCD Power On 
	#^ LCD 설정 
	#^ LED 설정 


	#^ 데모셋 시나리오 순서 
	#^ A. LCD start 
	#^ 1. PON PIN High 
	#^ 2. Delay 10ms 
	#^ 3. 
	#^ B. LED DRV start 
	#^ 1. LED_EN PIN (GPIO42) High 
	#^ 2. Delay 3ms 
	#^ 3. LED_Drv_EN : I2C통신 
	#^ 4. Delay 30ms 
	#^ 5. LED_PWM_DIM
	#^ 6. LED_Drv_DIM : I2C통신 

	#! 동작 순서 
	#! 1. LVDS Interface Init. (Video must be sent before PON go High)
	#! 2. LCD Power On 
	#! 		(LCD_RL, LCD_On/Off 2개 Pin은 Pull up으로 처리 필요. LCD 3.3V 인가 동시에 High가 되어야 하는데, Indigo4 booting 이후 시간 소요 상 동시 High 불가능.) 
	#! 3. LED On 
	#! LED가 먼저 On 되고, LCD가 On되면 dummy data가 출력될 수 있다고 함. 


	# SFR (LCD 신호 시퀀스)

	#$ 0x00000000	SRAM.LCD_FAIL_PIN_Status   
# 


###################################################################################################################
###################################################################################################################
###################################################################################################################
## LCD Power On 

fncBegin		#name:LCD_POWER_ON# 
## 1. LCD_RST PIN - High 
wf32	0x000A8004	17 1 1	# GPIO.POSR0_HIGH 	- LCD_RST(GPIO49)	Output High 
d	1000 	# 1ms delay 

## 2. TOUCH_RST PIN - High 
wf32	0x000A8004	11 1 1	# GPIO.POSR0_HIGH	- TOUCH_RST(GPIO43) Output High 

## 5. PON PIN - High 
d	5000	# 5ms delay 		
d	5000	# 5ms delay 		
d	6000	# 6ms delay = 16ms delay
wf32	0x000A8004	20 1 1	# GPIO.POSR0_HIGH : GPIO52(PON)	 Output High 
fncCall 		#name:# 

fncEnd			#name:LCD_POWER_ON# 


###################################################################################################################
###################################################################################################################
###################################################################################################################
## LCD Fail CHECK 
#? SFR LCD Fault 상태 감지에 해당. 

#$ SCH net name : LCD_FAIL[GPIO50] (OK - Low, Fault - High)
## LCD_FAIL 핀 High-Low 판별 


rf32	0x000A8304	18 1	#path:INDIGO4L.GPIO.PIDR0 HIGH#
i4drcheck	0x00000000		# IF 
	jmpnamed always 0 		#name:LCD_FAULT# 
	jmpnamed always 0 		#name:LCD_OK# 	

#? LCD Fault 발생 시 해당 루틴에서 - SYS_Fault Pin 출력, Fault Log 바로 실행할지 아니면 나중에 일괄 처리 할지 결정해야함. 

## LCD Fault 발생 
lblnamed	#name:LCD_FAULT# 

jmpnamed	always	0		#name:LCD_MONITORING_END#		

## LCD 정상 
lblnamed	#name:LCD_OK# 

lblnamed					#name:LCD_MONITORING_END#		








i4bufclr	13

# 반복문 시작 
lblnamed	#name:LCD_FAIL_LOW#		
d	50		# 50us Delay, 50us * 200 = 10ms 	
rf32	0x000A8304	18 1	# PIDR0 High	#$ LCD_FAIL(GPIO50) 입력 상태 확인 
i4bufinc	13
i4bufcheck	13	200
	jmpnamed	notzero	0	#name:LCD_FAIL_LOW#	- IF DREG0 != 0 
	# 반복문 끝 
	jmpnamed	zero	0	#name:LCD_FAIL_OK#	- IF DREG0 == 0 

# SRAM.LCD_FAIL_PIN_Status  
i4drload	0xFFFFFFFF		# DREG1 = 0, DREG0 = 0xFFFFFFFF
i4drload	0x6000023C		# SRAM.LCD_FAIL_PIN_Status 	# DREG1 = 0xFFFFFFFF, DREG0 = 0x6000023C
i4poke	32					# SRAM.LCD_FAIL_PIN_Status = 0xFFFFFFFF , NG 

#? 240919 - 이 부분 SYS_FAULT 관련해서 바로 반응할지, 저장하고 나중에 할지. 
#? wf32	0x000A8024	0 1 1	# GPIO.POSR1_HIGH	#! fncCall 	#name:LCD_FAIL_OUT

jmpnamed	always	0	#name:LCD_FAIL_END#	GO TO 	

lblnamed	#name:LCD_FAIL_OK#		
i4drload	0x00000000		# DREG1 = DREG0, DREG0 = 0x00000000
i4drload	0x6000023C		# SRAM.LCD_FAIL_PIN_Status	# DREG1 = 0x00000000, DREG0 = 0x6000023C
i4poke	32					# SRAM.LCD_FAIL_PIN_Status = 0x00000000 , OK 
lblnamed	#name:LCD_FAIL_END#		


















###################################################################################################################
###################################################################################################################
###################################################################################################################
## LED Drv Start

wf32	0x000A8004	10 1 1	# GPIO.POSR0_HIGH : GPIO42(LED_EN) - High 출력	#!fncCall 	#name:LED_EN_HIGH#
d	3000	# 3ms 

fncCall 	#name:I2C_LED_DRV_EN#

#? ksw - delay를 이렇게 많이 줘야 하는 이유는? 시퀀스가 필요한지? - 1. LCD, 2. LED On 
d	5000	# 5ms 
d	5000
d	5000
d	5000
d	5000
d	5000	# 30ms delay 

fncCall 	#name:LED_PWM_DIM#
d	5000	# 5ms

fncCall 	#name:I2C_LED_DRV_DIM#				
d	5000	# 5ms


i4bufclr	13

# 반복문 시작 
lblnamed		#name:LED_FAIL_HIGH#
d	50
rf32	0x000A8304	14 1	# PIDR0 High	#$ LED_FAIL(GPIO46) 입력 상태 확인 
i4bufinc	13				
i4bufcheck	13	200			
	jmpnamed	zero	0	#name:LED_FAIL_HIGH#
	# 반복문 끝
	jmpnamed	notzero	0	#name:LED_FAIL_OK#

# SRAM.LED_FAIL_PIN_Status 
i4drload	0xFFFFFFFF 	# 		
i4drload	0x60000240	# SRAM.LCD_FAIL_PIN_Status 
i4poke	32				# 

wf32	0x000A8028	31 1 1	# GPIO.POCR1_LOW	#! fncCall 		#name:LED_FAIL_OUT#

jmpnamed	always	0	#name:LED_FAIL_END#		

# SRAM.LED_Fail_S OK 
lblnamed				#name:LED_FAIL_OK#
i4drload	0x11111111			
i4drload	0x60000240	# SRAM.LED_Fail_S 		
i4poke	32
lblnamed				#name:LED_FAIL_END#		

d	5000	# 5ms delay 		


###################################################################################################################
###################################################################################################################
###################################################################################################################				
## LED DRV - Enable  
fncBegin		#name:I2C_LED_DRV_EN#			
i4drget	8	0x60130037				# SRAM.LED_DRV_ADDR
fncCall 		#name:I2C_START#			
fncCall 		#name:I2C_T.R_done#			
#Data Write 1Byte (DATA_Address)#					
i4drget	8	0x60130038				# SRAM.LED_DRV_EN_reg
fncCall 		#name:I2C_Write#			
fncCall 		#name:I2C_T.R_done#			
i4drget	8	0x60130039				# SRAM.LED_DRV_EN_data 
fncCall 		#name:I2C_Write#			
fncCall 		#name:I2C_T.R_done#			
#I2C 종료#					
w16		0x00095000	0x00000000		
d	100				
fncEnd		#name:I2C_LED_DRV_EN#			

###################################################################################################################
###################################################################################################################
###################################################################################################################
## LED DRV - DIMMING enable 
fncBegin		#name:I2C_LED_DRV_DIM#			
i4drget	8	0x60130037				# SRAM.LED_DRV_ADDR 
fncCall 		#name:I2C_START#			
fncCall 		#name:I2C_T.R_done#			
#Data Write 1Byte (DATA_Address)#					
i4drget	8	0x6013003A				# 
fncCall 		#name:I2C_Write#			
fncCall 		#name:I2C_T.R_done#			
i4drget	8	0x6013003B			
fncCall 		#name:I2C_Write#			
fncCall 		#name:I2C_T.R_done#			
#I2C 종료#					
w16		0x00095000	0x00000000		
d	100				
fncEnd		#name:I2C_LED_DRV_DIM#			


###################################################################################################################
###################################################################################################################
###################################################################################################################
## DISPLAY ON - LCD POWER ON 
# GPIO56(LCD_ON/OFF)
fncBegin		#name:LCD_ON#			
wf32		0x000A8004	24 1 1		#  GPIO.POSR0_HIGH#	
fncEnd		#name:LCD_ON#			

fncBegin		#name:LCD_OFF#			
wf32		0x000A800C	24 1 1		#  GPIO.POCR0_HIGH#
fncEnd		#name:LCD_OFF#			

# GPIO52(PON)
fncBegin		#name:PON_HIGH#			
wf32		0x000A8004	20 1 1		#  GPIO.POSR0_HIGH#
fncEnd		#name:PON_HIGH#			

fncBegin		#name:PON_LOW#			
wf32		0x000A800C	20 1 1		#  GPIO.POCR0_HIGH#
fncEnd		#name:PON_LOW#			
			
# GPIO43(TOUCH_RST), GPIO49(LCD_RST) 
fncBegin		#name:LCD_RST_HIGH#			
wf32		0x000A8004	11 1 1		#  GPIO.POSR0_HIGH#
wf32		0x000A8004	17 1 1		#  GPIO.POSR0_HIGH#
fncEnd		#name:LCD_RST_HIGH#			
					
fncBegin		#name:LCD_RST_LOW#			
wf32		0x000A800C	11 1 1		#  GPIO.POCR0_HIGH#
wf32		0x000A800C	17 1 1		#  GPIO.POCR0_HIGH#
fncEnd		#name:LCD_RST_LOW#			

# GPIO42(LED_EN)
fncBegin		#name:LED_EN_HIGH#			
wf32		0x000A8004	10 1 1		#  GPIO.POSR0_HIGH#	# GPIO42(LED_EN) - High 출력 
fncEnd		#name:LED_EN_HIGH#
					
fncBegin		#name:LED_EN_LOW#
wf32		0x000A800C	10 1 1		#  GPIO.POCR0_HIGH#	# GPIO42(LED_EN) - Low 출력 
fncEnd		#name:LED_EN_LOW#

# GPIO53(LED_DIM)
fncBegin		#name:LED_DIM_HIGH#			
wf32		0x000A8004	21 1 1		#  GPIO.POSR0_HIGH#
fncEnd		#name:LED_DIM_HIGH#			
					
fncBegin		#name:LED_DIM_LOW#			
wf32		0x000A800C	21 1 1		#  GPIO.POCR0_HIGH#
fncEnd		#name:LED_DIM_LOW#		
	
###################################################################################################################
###################################################################################################################
###################################################################################################################
## LED PWM

fncBegin		#name:LED_PWM_DIM#
w32		0x000008D4	0x00000047		# GC_PIN.GPIO53_CTL		# LED_DIM(GPIO53)
w8		0x0008A404 	0x00000000		# PPG_CORE_5.OE#
w16		0x0008A400	0x00000800		# PPG_CORE_5.PCN#
w16		0x0008A412	0x0000270F		# PPG_CORE_5.PCSR#
w16		0x0008A414	0x00001387		# PPG_CORE_5.PDUT#
w8		0x0008A405	0x00000001		# PPG_CORE_5.CNTEN#
w8		0x0008A403	0x00000001		# PPG_CORE_5.SWTRIG#
w8		0x0008A404	0x00000001		# PPG_CORE_5.OE#
fncEnd			#name:LED_PWM_DIM#












###################################################################################################################
###################################################################################################################
###################################################################################################################
## LED Fail CHECK 
#? SFR에 해당은 안 되나, 구현은 해놓는 게 낫지 않을까 

## LED_FAIL - GPIO Init 
w32		0x000008B8	0x00000000		#path:INDIGO4L.GC_PIN.GPIO46_CTL#	LED_FAIL 


#$ SCH net name : LED_FAIL[GPIO46] (OK - High , Fault - Low) 
## LED_FAIL 핀 High-Low 판별 
rf32	0x000A8304	14 1	#path:INDIGO4L.GPIO.PIDR0 HIGH#
i4drcheck	0x00000001		# IF 
	jmpnamed always 0		#name:LED_FAULT# 
	jmpnamed always 0 		#name:LED_OK# 	 

#? LCD Fault 발생 시 해당 루틴에서 - SYS_Fault Pin 출력, Fault Log 바로 실행할지 아니면 나중에 일괄 처리 할지 결정해야함. 


## LED Fault 발생 
lblnamed 	#name:LED_FAULT# 

jmpnamed	always	0		#name:LED_MONITORING_END#	GO TO 

## LED 정상 
lblnamed	#name:LED_OK# 

lblnamed					#name:LED_MONITORING_END#		





